<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linuxkai 的博客</title>
    <link>https://blog.linuxkai.com/</link>
    <description>Recent content on Linuxkai 的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Thu, 11 Apr 2024 15:00:17 +0800</lastBuildDate>
    <atom:link href="https://blog.linuxkai.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Elasticsearch Api 操作</title>
      <link>https://blog.linuxkai.com/posts/Linux/Elasticsearch-Api-%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Thu, 11 Apr 2024 15:00:17 +0800</pubDate>
      <guid>https://blog.linuxkai.com/posts/Linux/Elasticsearch-Api-%E6%93%8D%E4%BD%9C/</guid>
      <description>Elasticsearch api 操作 常用选项 返回漂亮的展示 ?pretty=true 返回人性化的结果 ?human cat apis 查看节点版本信息 curl -s -XGET -u elastic:elastic http://127.0.0.1:9200 查看集群健康状态 curl -u elastic:elastic http://127.0.0.1:9200/_cat/health?v 查看nodes状态 curl -u elastic:elastic http://127.0.0.1:9200/_cat/nodes?pretty 查看所有索引 curl -s -XGET -u elastic:elastic http://127.0.0.1:9200/_cat/indices # 添加过滤条件 curl -u elastic:elastic http://127.0.0.1:9200/_cat/indices/tbex*-2020.09.25?v 查看全部索引分片信息 curl</description>
    </item>
    <item>
      <title>关于我</title>
      <link>https://blog.linuxkai.com/about/</link>
      <pubDate>Tue, 09 Apr 2024 08:00:00 +0800</pubDate>
      <guid>https://blog.linuxkai.com/about/</guid>
      <description>关于我 从事运维十年的菜鸟，一直在学习的路上，偶尔也写写Python，最近开始关注Go，用Go也写了一两个小项目。欢迎大家一起交流。 联系我 我的Github 邮箱: linuxkai@gmail.com</description>
    </item>
    <item>
      <title>Git submodule操作</title>
      <link>https://blog.linuxkai.com/posts/Git/git-submodule-%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Sat, 25 Nov 2023 17:57:40 +0800</pubDate>
      <guid>https://blog.linuxkai.com/posts/Git/git-submodule-%E6%93%8D%E4%BD%9C/</guid>
      <description>git submodule操作 添加子模块 git submodule add git-url 删除子模块 删除子模块目录及源码 删除项目目录下.gitmodules文件中子模块相关条目 删除配置项中子模块相关条(.git/config) 删除模块下的子模块目录</description>
    </item>
    <item>
      <title>Git远程仓库地址变更本地如何修改</title>
      <link>https://blog.linuxkai.com/posts/Git/Git%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93%E5%9C%B0%E5%9D%80%E5%8F%98%E6%9B%B4%E6%9C%AC%E5%9C%B0%E5%A6%82%E4%BD%95%E4%BF%AE%E6%94%B9/</link>
      <pubDate>Sat, 25 Nov 2023 09:48:05 +0800</pubDate>
      <guid>https://blog.linuxkai.com/posts/Git/Git%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93%E5%9C%B0%E5%9D%80%E5%8F%98%E6%9B%B4%E6%9C%AC%E5%9C%B0%E5%A6%82%E4%BD%95%E4%BF%AE%E6%94%B9/</guid>
      <description>Git远程仓库地址变更本地如何修改 方法一： 通过命令直接修改 git remote set-url origin ssh_url(ssh_url换成新的git地址) 方法二： 通过命令先删除再添加远程仓库 git remote rm origin git remote add origin ssh_url 方法三： 修改配置文件 修改 [remote “o</description>
    </item>
    <item>
      <title>Git 仓库迁移</title>
      <link>https://blog.linuxkai.com/posts/Git/Git-%E4%BB%93%E5%BA%93%E8%BF%81%E7%A7%BB/</link>
      <pubDate>Sat, 25 Nov 2023 09:27:36 +0800</pubDate>
      <guid>https://blog.linuxkai.com/posts/Git/Git-%E4%BB%93%E5%BA%93%E8%BF%81%E7%A7%BB/</guid>
      <description>Git 仓库迁移 说明: 这种方式可以保留原版本库中的所有内容,包括 log 信息 步骤 从原地址克隆一份裸版本库 $ git clone --bare git://github.com/username/project.git &amp;ndash;bare：创建的克隆版本库都不包含工作区，直接就是版本库的内容，这样的版本库称为裸版</description>
    </item>
    <item>
      <title>Git 修改已提交 commit 的信息</title>
      <link>https://blog.linuxkai.com/posts/Git/Git-%E4%BF%AE%E6%94%B9%E5%B7%B2%E6%8F%90%E4%BA%A4-commit-%E7%9A%84%E4%BF%A1%E6%81%AF/</link>
      <pubDate>Fri, 01 Sep 2023 21:13:53 +0800</pubDate>
      <guid>https://blog.linuxkai.com/posts/Git/Git-%E4%BF%AE%E6%94%B9%E5%B7%B2%E6%8F%90%E4%BA%A4-commit-%E7%9A%84%E4%BF%A1%E6%81%AF/</guid>
      <description>修改最后一次提交 commit 的信息 修改最近提交的 commit 信息 git commit --amend --message=&amp;#34;NEW MESSAGE&amp;#34; --author=&amp;#34;test &amp;lt;test@163.com&amp;gt;&amp;#34; 仅修改 message 信息 git commit --amend --message=&amp;#34;NEW MESSAGE&amp;#34; 仅修改 author 信息 git commit --amend --author=&amp;#34;test &amp;lt;test@163.com&amp;gt;&amp;#34;</description>
    </item>
    <item>
      <title>Git技巧</title>
      <link>https://blog.linuxkai.com/posts/Git/Git-%E6%8A%80%E5%B7%A7/</link>
      <pubDate>Tue, 15 Aug 2023 17:49:04 +0800</pubDate>
      <guid>https://blog.linuxkai.com/posts/Git/Git-%E6%8A%80%E5%B7%A7/</guid>
      <description>git 技巧 设置文本编辑器 git config --global core.editor emacs 配置用户信息 git config --global user.name &amp;#34;Your Name&amp;#34; git config --global user.email &amp;#34;email@example.com&amp;#34; 版本回退 回退上一个版本 git reset --hard HEAD^ 回退到指定版本 git reset --hard 0fa7197c3170f7dbf8c872592a873ab50a4ce094 回退完后,要强制提交,强制提交比较旧的代码 git push origin HEAD:master --force #or git push origin 0fa7197c3170f7dbf8c872592a873ab50a4ce094:master --force git reset 之后的后悔药 git reset</description>
    </item>
    <item>
      <title>Git设置代理</title>
      <link>https://blog.linuxkai.com/posts/Git/git-%E8%AE%BE%E7%BD%AE%E4%BB%A3%E7%90%86/</link>
      <pubDate>Sun, 23 Apr 2023 15:32:16 +0800</pubDate>
      <guid>https://blog.linuxkai.com/posts/Git/git-%E8%AE%BE%E7%BD%AE%E4%BB%A3%E7%90%86/</guid>
      <description>配置代理 打开配置文件 vim ~/.gitconfig 添加如下配置 [http &amp;#34;https://github.com/&amp;#34;] proxy = http://127.0.0.1:1081 [https &amp;#34;https://github.com/&amp;#34;] proxy = http://127.0.0.1:1081 [http &amp;#34;https://my.comapnyserver.com/&amp;#34;] proxy = &amp;#34;&amp;#34;</description>
    </item>
    <item>
      <title>Git修改分支名称</title>
      <link>https://blog.linuxkai.com/posts/Git/git-%E4%BF%AE%E6%94%B9%E5%88%86%E6%94%AF%E5%90%8D%E7%A7%B0/</link>
      <pubDate>Thu, 20 Apr 2023 16:35:30 +0800</pubDate>
      <guid>https://blog.linuxkai.com/posts/Git/git-%E4%BF%AE%E6%94%B9%E5%88%86%E6%94%AF%E5%90%8D%E7%A7%B0/</guid>
      <description>git 修改分支名称 本地分支重命名(还没有推送到远程) git branch -m oldName newName 远程分支重命名 (已经推送远程-假设本地分支和远程对应分支名称相同) 重命名远程分支对应的本地分支 git branch -m oldName newName 删除远程分支 git push --delete origin oldName 上传新命名的本地</description>
    </item>
    <item>
      <title>docker-compose 修改容器时区</title>
      <link>https://blog.linuxkai.com/posts/Docker/docker-compose-%E4%BF%AE%E6%94%B9%E5%AE%B9%E5%99%A8%E6%97%B6%E5%8C%BA/</link>
      <pubDate>Thu, 08 Sep 2022 17:12:40 +0800</pubDate>
      <guid>https://blog.linuxkai.com/posts/Docker/docker-compose-%E4%BF%AE%E6%94%B9%E5%AE%B9%E5%99%A8%E6%97%B6%E5%8C%BA/</guid>
      <description>docker-compose 修改容器时区 方法1 environment: TZ: Asia/Shanghai 或者 environment: - TZ: Asia/Shanghai 方法2 environment: - SET_CONTAINER_TIMEZONE=true - CONTAINER_TIMEZONE=Asia/Shanghai #或者这样写 environment: SET_CONTAINER_TIMEZONE: true CONTAINER_TIMEZONE: Asia/Shanghai</description>
    </item>
    <item>
      <title>df命令hang住，一直不出结果</title>
      <link>https://blog.linuxkai.com/posts/Linux/df%E5%91%BD%E4%BB%A4hang%E4%BD%8F%E4%B8%80%E7%9B%B4%E4%B8%8D%E5%87%BA%E7%BB%93%E6%9E%9C/</link>
      <pubDate>Wed, 07 Sep 2022 11:14:05 +0800</pubDate>
      <guid>https://blog.linuxkai.com/posts/Linux/df%E5%91%BD%E4%BB%A4hang%E4%BD%8F%E4%B8%80%E7%9B%B4%E4%B8%8D%E5%87%BA%E7%BB%93%E6%9E%9C/</guid>
      <description>说明 当使用 df 命令查看磁盘空间时被 hang 住，不显示结果 查找问题 通过strace命令查看系统调用 execve(&amp;#34;/usr/bin/df&amp;#34;, [&amp;#34;df&amp;#34;], 0x7ffcdb37ef80 /* 25 vars */) = 0 brk(NULL) = 0xcb9000 mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fbfdc740000 access(&amp;#34;/etc/ld.so.preload&amp;#34;, R_OK) = -1 ENOENT (没有那个文件或目录) open(&amp;#34;/etc/ld.so.cache&amp;#34;, O_RDONLY|O_CLOEXEC) = 3 fstat(3, {st_mode=S_IFREG|0644, st_size=60184, ...}) = 0 mmap(NULL, 60184, PROT_READ, MAP_PRIVATE, 3, 0) = 0x7fbfdc731000 close(3) =</description>
    </item>
    <item>
      <title>Kubernetes集群安全地清空一个节点</title>
      <link>https://blog.linuxkai.com/posts/Kubernetes/%E5%AE%89%E5%85%A8%E5%9C%B0%E6%B8%85%E7%A9%BA%E4%B8%80%E4%B8%AA%E8%8A%82%E7%82%B9/</link>
      <pubDate>Wed, 03 Aug 2022 10:30:14 +0800</pubDate>
      <guid>https://blog.linuxkai.com/posts/Kubernetes/%E5%AE%89%E5%85%A8%E5%9C%B0%E6%B8%85%E7%A9%BA%E4%B8%80%E4%B8%AA%E8%8A%82%E7%82%B9/</guid>
      <description>k8s 集群安全地清空一个节点 清空节点 kubectl drain &amp;lt;node name&amp;gt; 问题 ➜ ~ kubectl drain xdf-31-kvm-python-107 node/xdf-31-kvm-python-107 already cordoned error: unable to drain node &amp;#34;xdf-31-kvm-python-107&amp;#34; due to error:[cannot delete Pods with local storage (use --delete-emptydir-data to override): ailearn-dev/ailearn-composer-interface-v1-f6f756895-wpnx5, ailearn-dev/ailearn-instruction-proxy-svr-v1-666d48bb6d-wlclh, ailearn-dev/kubevpn.traffic.manager, argocd/argocd-dex-server-5665ffc49-j5q2n, kube-system/metrics-server-799d467fd5-7tvc7, cannot delete DaemonSet-managed Pods (use --ignore-daemonsets to ignore): kube-system/calico-node-rcgw7, kube-system/kube-proxy-5rlmq, metallb-system/speaker-rbbvp, monitoring/node-exporter-5sl72], continuing command... There are pending nodes to be drained: xdf-31-kvm-python-107 cannot delete Pods with local storage (use --delete-emptydir-data to override): ailearn-dev/ailearn-composer-interface-v1-f6f756895-wpnx5, ailearn-dev/ailearn-instruction-proxy-svr-v1-666d48bb6d-wlclh, ailearn-dev/kubevpn.traffic.manager, argocd/argocd-dex-server-5665ffc49-j5q2n, kube-system/metrics-server-799d467fd5-7tvc7 cannot delete DaemonSet-managed Pods (use --ignore-daemonsets to ignore): kube-system/calico-node-rcgw7, kube-system/kube-proxy-5rlmq,</description>
    </item>
    <item>
      <title>Kubernetes update步骤</title>
      <link>https://blog.linuxkai.com/posts/Kubernetes/k8s-update/</link>
      <pubDate>Sun, 31 Jul 2022 00:48:06 +0800</pubDate>
      <guid>https://blog.linuxkai.com/posts/Kubernetes/k8s-update/</guid>
      <description>升级k8s 集群(1.19&amp;ndash;&amp;gt;1.20) 官方文档: https://v1-20.docs.kubernetes.io/zh/docs/tasks/administer-cluster/kubeadm/kubeadm-upgrade/#%E5%8D%87%E7%BA%A7-kubelet-%E5%92%8C-kubectl-1 升级master(来自官方文档，未验证) 执行 &amp;ldquo;kubeadm upgrade&amp;rdquo; 升级第一个master节点 升级 kubeadm yum install -y kubeadm-1.20.15-0 --disableexcludes=kubernetes 验证下载操作正常，并且 kubeadm 版本正确 [root@xdf-14-python-base-57 ~]# kubeadm version kubeadm</description>
    </item>
    <item>
      <title>Nginx  add_header</title>
      <link>https://blog.linuxkai.com/posts/Linux/Nginx-add_header/</link>
      <pubDate>Wed, 20 Jul 2022 14:09:16 +0800</pubDate>
      <guid>https://blog.linuxkai.com/posts/Linux/Nginx-add_header/</guid>
      <description>X-Frame-Options 用来给浏览器指示允许一个页面可否在 、、 或者 中展现的标记。站点可以通过确保网站没有被嵌入到别人的站点里面，从而避免点击劫持攻击 语法 # http,server,location X-Frame-Options: DENY X-Frame-Options: SAMEORIGIN DENY: 表示该页面不允许在 frame 中展示，即便是在相同域名的页面中嵌套</description>
    </item>
    <item>
      <title>DNS Bind配置</title>
      <link>https://blog.linuxkai.com/posts/Linux/DNS-Bind%E9%85%8D%E7%BD%AE/</link>
      <pubDate>Fri, 01 Jul 2022 22:31:32 +0800</pubDate>
      <guid>https://blog.linuxkai.com/posts/Linux/DNS-Bind%E9%85%8D%E7%BD%AE/</guid>
      <description>参考文档： https://www.cnblogs.com/sandshell/p/11673658.html#autoid-7-3-0 要求 使用内部解析 内部解析如果失败，使用公网解析 dns 集群使用 环境 系统版本：Centos 7.3 192.168.112.231(主DNS) 192.168.112.9(从DNS) 192.168.112.</description>
    </item>
    <item>
      <title>基于 acme.sh 自动更新 APISIX SSL 证书</title>
      <link>https://blog.linuxkai.com/posts/Linux/%E5%9F%BA%E4%BA%8E-acme.sh-%E8%87%AA%E5%8A%A8%E6%9B%B4%E6%96%B0-APISIX-SSL-%E8%AF%81%E4%B9%A6/</link>
      <pubDate>Mon, 06 Jun 2022 18:02:37 +0800</pubDate>
      <guid>https://blog.linuxkai.com/posts/Linux/%E5%9F%BA%E4%BA%8E-acme.sh-%E8%87%AA%E5%8A%A8%E6%9B%B4%E6%96%B0-APISIX-SSL-%E8%AF%81%E4%B9%A6/</guid>
      <description>基于 acme.sh 自动更新 APISIX SSL 证书 安装 openssl , jq 略 安装acme.sh curl https://get.acme.sh | sh -s email=my@example.com my@example.com 替换成自己的邮箱，用于ZeroSSL.com 账号注册，acme.sh 默认CA 已经更新为ZeroSSL了，而ZeroSSL 需要邮箱地址注</description>
    </item>
    <item>
      <title>MySQL flush-hosts问题</title>
      <link>https://blog.linuxkai.com/posts/%E6%95%B0%E6%8D%AE%E5%BA%93/mysqladmin-flush-hosts%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/</link>
      <pubDate>Wed, 09 Feb 2022 16:35:37 +0800</pubDate>
      <guid>https://blog.linuxkai.com/posts/%E6%95%B0%E6%8D%AE%E5%BA%93/mysqladmin-flush-hosts%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/</guid>
      <description>flush-hosts问题 问题 连接mysql时出现下面错误 &amp;#34;Host &amp;#39;192.168.1.100&amp;#39; is blocked because of many connection errors; unblock with &amp;#39;mysqladmin flush-hosts&amp;#39;&amp;#34; 原因 同一个ip在短时间内产生太多(超过mysql数据库max_connection_errors的最大值)中断的数据</description>
    </item>
    <item>
      <title>跨域问题</title>
      <link>https://blog.linuxkai.com/posts/Linux/%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98/</link>
      <pubDate>Mon, 07 Feb 2022 17:09:37 +0800</pubDate>
      <guid>https://blog.linuxkai.com/posts/Linux/%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98/</guid>
      <description>跨域问题 产生跨域的原因 浏览器的限制 跨域 XHR(XMLHttpRequest)请求 解决思路 JSONP nginx 代理 浏览器禁止检查跨域 浏览器禁止检查跨域(以 chrome 为例) 彻底关闭 chrome 使用命令行启动 mac open -a &amp;#34;Google Chrome&amp;#34; --args --disable-web-security --user-data-dir windows /PATH_TO/chrome.exe --args --disable-web-security --user-data-dir # 也可</description>
    </item>
    <item>
      <title>云主机磁盘扩容</title>
      <link>https://blog.linuxkai.com/posts/Linux/%E4%BA%91%E4%B8%BB%E6%9C%BA%E7%A3%81%E7%9B%98%E6%89%A9%E5%AE%B9/</link>
      <pubDate>Mon, 07 Feb 2022 10:34:29 +0800</pubDate>
      <guid>https://blog.linuxkai.com/posts/Linux/%E4%BA%91%E4%B8%BB%E6%9C%BA%E7%A3%81%E7%9B%98%E6%89%A9%E5%AE%B9/</guid>
      <description>磁盘扩容 有分区 root@aws-wlomni-jp-52-154:~# growpart /dev/xvdf 1 CHANGED: partition=1 start=2048 old: size=1048573919 end=1048575967 new: size=2147481567,end=2147483615 root@aws-wlomni-jp-52-154:~# root@aws-wlomni-jp-52-154:~# resize2fs /dev/xvdf1 resize2fs 1.42.13 (17-May-2015) Filesystem at /dev/xvdf1 is mounted on /databackup; on-line resizing required old_desc_blocks = 32, new_desc_blocks = 64 The filesystem on /dev/xvdf1 is now 268435195 (4k) blocks long. 无分区 resize2fs /dev/xvdf1</description>
    </item>
    <item>
      <title>Nginx反向代理WebSocket</title>
      <link>https://blog.linuxkai.com/posts/Linux/Nginx%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86WebSocket/</link>
      <pubDate>Mon, 10 Jan 2022 16:31:16 +0800</pubDate>
      <guid>https://blog.linuxkai.com/posts/Linux/Nginx%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86WebSocket/</guid>
      <description>nginx添加配置文件websocket.conf 下面文件的domain, upstream,ssl根据自己情况修改 map $http_upgrade $connection_upgrade { default upgrade; &amp;#39;&amp;#39; close; } upstream websocket { server localhost:8282; # appserver_ip:ws_port } server { listen 80; server_name websocket.abc.com; location / { proxy_pass http://websocket; proxy_read_timeout 300s; proxy_send_timeout 300s; proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_http_version 1.1;</description>
    </item>
    <item>
      <title>Python获取本机IP地址</title>
      <link>https://blog.linuxkai.com/posts/Python/python-%E8%8E%B7%E5%8F%96%E6%9C%AC%E6%9C%BA-ip/</link>
      <pubDate>Fri, 24 Dec 2021 14:39:09 +0800</pubDate>
      <guid>https://blog.linuxkai.com/posts/Python/python-%E8%8E%B7%E5%8F%96%E6%9C%AC%E6%9C%BA-ip/</guid>
      <description>Python 获取本机 ip地址 其它方法如果有多个 ip或者是装了 docker 后,产生多个虚拟的网卡后, 得到的结果 就不准确了 import socket import uuid def get_host_ip(): &amp;#34;&amp;#34;&amp;#34; 查询本机ip地址 :return: ip &amp;#34;&amp;#34;&amp;#34; ip = str(uuid.uuid1()).replace(&amp;#39;-&amp;#39;, &amp;#39;&amp;#39;) try: s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM) s.connect((&amp;#39;8.8.8.8&amp;#39;, 80)) ip = s.getsockname()[0] except: pass finally: s.close() return ip</description>
    </item>
    <item>
      <title>Kubernetes安装步骤</title>
      <link>https://blog.linuxkai.com/posts/Kubernetes/kubernetes-install/</link>
      <pubDate>Wed, 01 Dec 2021 13:15:28 +0800</pubDate>
      <guid>https://blog.linuxkai.com/posts/Kubernetes/kubernetes-install/</guid>
      <description>kubernetes install 前置知识点 生产环境部署k8s 集群有两种模式 kubeadm: Kubeadm是一个K8s部署工具，提供kubeadm init和kubeadm join，用于快速部署Kubernetes集群 二进制包: 从github下载</description>
    </item>
    <item>
      <title>Nexus安装配置</title>
      <link>https://blog.linuxkai.com/posts/Linux/Nexus%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/</link>
      <pubDate>Fri, 26 Nov 2021 23:39:33 +0800</pubDate>
      <guid>https://blog.linuxkai.com/posts/Linux/Nexus%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/</guid>
      <description>官方文档：https://help.sonatype.com/repomanager3/download/download-archives&amp;mdash;repository-manager-3 版本说</description>
    </item>
    <item>
      <title>Redis集群部署</title>
      <link>https://blog.linuxkai.com/posts/%E6%95%B0%E6%8D%AE%E5%BA%93/redis%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2/</link>
      <pubDate>Thu, 25 Nov 2021 10:15:27 +0800</pubDate>
      <guid>https://blog.linuxkai.com/posts/%E6%95%B0%E6%8D%AE%E5%BA%93/redis%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2/</guid>
      <description>需要的机器 redis01:192.168.112.152 redis02:192.168.112.153 redis03:192.168.112.154 部署说明： 每台机器装两个节点(端口分别6379,6380，一主一备) redis都安装到了/srv/redis-cluster 配置文件放在了 /srv/redis-cluster/conf 日志文件放在 /srv/redis-cluster/log 编译redis tar xf redis-5.0.0.tar.gz cd redis-5.0.0 make make install</description>
    </item>
    <item>
      <title>Windows服务器查看硬件信息命令</title>
      <link>https://blog.linuxkai.com/posts/Windows/Windows%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%9F%A5%E7%9C%8B%E7%A1%AC%E4%BB%B6%E4%BF%A1%E6%81%AF%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Thu, 25 Nov 2021 10:09:06 +0800</pubDate>
      <guid>https://blog.linuxkai.com/posts/Windows/Windows%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%9F%A5%E7%9C%8B%E7%A1%AC%E4%BB%B6%E4%BF%A1%E6%81%AF%E5%91%BD%E4%BB%A4/</guid>
      <description>windows服务器查看硬件信息命令 查看内存信息 查看内存详细信息 gwmi -class win32_physicalmemory 查看内存列表信息 wmic wmic:root\cli&amp;gt;memorychip get * 查看内存最大容量和插槽数量 gwmi -class win32_physicalmemoryarray wmic wmic:root\cli&amp;gt;path Win32_PhysicalMemoryArray get MemoryDevices 查看CPU信息 查看CPU详细信息 gwmi -class win32_proccessor 查看物理CPU个数 @(gwmi -class win32_processor).count 查</description>
    </item>
    <item>
      <title>Windows下使用bat设置http代理</title>
      <link>https://blog.linuxkai.com/posts/Windows/Windows%E4%B8%8B%E4%BD%BF%E7%94%A8bat%E8%AE%BE%E7%BD%AEhttp%E4%BB%A3%E7%90%86/</link>
      <pubDate>Thu, 25 Nov 2021 10:06:11 +0800</pubDate>
      <guid>https://blog.linuxkai.com/posts/Windows/Windows%E4%B8%8B%E4%BD%BF%E7%94%A8bat%E8%AE%BE%E7%BD%AEhttp%E4%BB%A3%E7%90%86/</guid>
      <description>Windows下使用bat设置http代理 设置 @echo off echo 开始设置http代理.......... echo 现在程序将关闭您的浏览器。。。。。 taskkill /f /im iexplore.exe reg add &amp;#34;HKCU\Software\Microsoft\Windows\CurrentVersion\Internet Settings&amp;#34; /v ProxyEnable /t REG_DWORD /d 1 /f reg add &amp;#34;HKCU\Software\Microsoft\Windows\CurrentVersion\Internet Settings&amp;#34; /v ProxyServer /d &amp;#34;123.123.123.123:1111&amp;#34; /f color 2 echo 已成功设置代理服务</description>
    </item>
    <item>
      <title>Kafka 常用命令</title>
      <link>https://blog.linuxkai.com/posts/Linux/Kafka-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Sat, 13 Nov 2021 23:41:24 +0800</pubDate>
      <guid>https://blog.linuxkai.com/posts/Linux/Kafka-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</guid>
      <description>TOPIC 说明： Kafka使用版本：2.12-0.10.2.2(instruction 服务使用的此版本) kafka2.2.0版本以上, 使用--bootstrap-server 127.0.0.1:9092 连接，--zookeepker 1</description>
    </item>
    <item>
      <title>Elasticsearch接入LDAP</title>
      <link>https://blog.linuxkai.com/posts/Linux/Elasticsearch%E6%8E%A5%E5%85%A5ldap/</link>
      <pubDate>Thu, 29 Jul 2021 17:21:28 +0800</pubDate>
      <guid>https://blog.linuxkai.com/posts/Linux/Elasticsearch%E6%8E%A5%E5%85%A5ldap/</guid>
      <description>说明： elasticsearch版本: 7.6.1 修改elasticsearch.yml,添加如下内容，并根据自己情况做相应修改 # 使用ldap xpack: security: authc: realms: ldap: ldap1: order: 0 url: &amp;#34;ldap://192.168.0.100:389&amp;#34; user_dn_templates: - &amp;#34;uid={0},ou=People,dc=Chk,dc=com&amp;#34; group_search: base_dn: &amp;#34;dc=Chk,dc=com&amp;#34; files: role_mapping: &amp;#34;/etc/elasticsearch/role_mapping.yml&amp;#34; unmapped_groups_as_roles: false # 使用ldaps xpack: security: authc: realms: ldap:</description>
    </item>
    <item>
      <title>Elasticsearch7.6.1 破解</title>
      <link>https://blog.linuxkai.com/posts/Linux/Elasticsearch7.6.1-%E7%A0%B4%E8%A7%A3/</link>
      <pubDate>Tue, 27 Jul 2021 23:47:39 +0800</pubDate>
      <guid>https://blog.linuxkai.com/posts/Linux/Elasticsearch7.6.1-%E7%A0%B4%E8%A7%A3/</guid>
      <description>教程参考：https://blog.espnlol.com/?p=504 破解过程 前期准备 准备反编译工具 破解中要用户反编译工具 luyten,根据自动环境下载相应的版本 https://github.com/deathmarine/Luyten/releases 最新版本的osx 版本不适用 macos 10.</description>
    </item>
    <item>
      <title>Nacos安装部署及操作</title>
      <link>https://blog.linuxkai.com/posts/Linux/Nacos-%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2%E5%8F%8A%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Thu, 01 Apr 2021 22:33:38 +0800</pubDate>
      <guid>https://blog.linuxkai.com/posts/Linux/Nacos-%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2%E5%8F%8A%E6%93%8D%E4%BD%9C/</guid>
      <description>环境说明 系统版本: centos 7.3 nacos版本: 1.3.0 机器: 192.168.111.65 192.168.111.66 192.168.111.67 安装 下载 wget https://github.com/alibaba/nacos/releases/download/1.3.0/nacos-server-1.3.0.tar.gz 解压 tar xf nacos-server-1.3.0.tar.gz cd nacos 配置配置文件 conf/cluster.conf，配置文件内容如下 192.168.111.65:8848 192.168.111.66:8848 192.168.111.67:8848 conf/application.properties spring.datasource.platform=mysql db.num=1 db.url.0=jdbc:mysql://192.168.111.65:3316/nacos_config?characterEncoding=utf8&amp;amp;connectTimeout=1000&amp;amp;socketTimeout=3000&amp;amp;autoReconnect=true db.user=root db.password=123456 spring.datasource.platform: 指定数据源为mysql db.num: 数据库数目 db.url.0: 第</description>
    </item>
    <item>
      <title>Redis 批量清除Key</title>
      <link>https://blog.linuxkai.com/posts/%E6%95%B0%E6%8D%AE%E5%BA%93/Redis%E6%89%B9%E9%87%8F%E6%B8%85%E9%99%A4Key/</link>
      <pubDate>Sat, 09 Jan 2021 23:48:28 +0800</pubDate>
      <guid>https://blog.linuxkai.com/posts/%E6%95%B0%E6%8D%AE%E5%BA%93/Redis%E6%89%B9%E9%87%8F%E6%B8%85%E9%99%A4Key/</guid>
      <description>批量清除key 命令 ./redis-cli -h bigdata.lpntvo.ng.0001.apne1.cache.amazonaws.com -p 6379 keys &amp;#34;position*&amp;#34; | xargs ./redis-cli -h bigdata.lpntvo.ng.0001.apne1.cache.amazonaws.com -p 6379 del</description>
    </item>
    <item>
      <title>Nginx Invalid UTF-8 sequence in header value</title>
      <link>https://blog.linuxkai.com/posts/Linux/Nginx-Invalid-UTF-8-sequence-in-header-value/</link>
      <pubDate>Sat, 09 Jan 2021 23:44:01 +0800</pubDate>
      <guid>https://blog.linuxkai.com/posts/Linux/Nginx-Invalid-UTF-8-sequence-in-header-value/</guid>
      <description>failed: Invalid UTF-8 sequence in header value 解决方式 nginx.conf里添加： server_tag &amp;#34;apache&amp;#34;;</description>
    </item>
    <item>
      <title>Prometheus部署</title>
      <link>https://blog.linuxkai.com/posts/Linux/Prometheus%E9%83%A8%E7%BD%B2/</link>
      <pubDate>Sat, 09 Jan 2021 23:37:12 +0800</pubDate>
      <guid>https://blog.linuxkai.com/posts/Linux/Prometheus%E9%83%A8%E7%BD%B2/</guid>
      <description>下载各组件,(选择安装) wget https://github.com/prometheus/prometheus/releases/download/v2.23.0/prometheus-2.23.0.linux-amd64.tar.gz wget https://github.com/prometheus/alertmanager/releases/download/v0.21.0/alertmanager-0.21.0.linux-amd64.tar.gz wget https://github.com/prometheus/blackbox_exporter/releases/download/v0.17.0/blackbox_exporter-0.17.0.linux-amd64.tar.gz wget https://github.com/prometheus/consul_exporter/releases/download/v0.7.1/consul_exporter-0.7.1.linux-amd64.tar.gz wget https://github.com/prometheus/graphite_exporter/releases/download/v0.9.0/graphite_exporter-0.9.0.linux-amd64.tar.gz wget https://github.com/prometheus/haproxy_exporter/releases/download/v0.11.0/haproxy_exporter-0.11.0.linux-amd64.tar.gz wget https://github.com/prometheus/memcached_exporter/releases/download/v0.7.0/memcached_exporter-0.7.0.linux-amd64.tar.gz wget https://github.com/prometheus/mysqld_exporter/releases/download/v0.12.1/mysqld_exporter-0.12.1.linux-amd64.tar.gz wget https://github.com/prometheus/node_exporter/releases/download/v1.0.1/node_exporter-1.0.1.linux-amd64.tar.gz wget https://github.com/prometheus/pushgateway/releases/download/v1.2.0/pushgateway-1.2.0.linux-amd64.tar.gz wget https://github.com/prometheus/statsd_exporter/releases/download/v0.17.0/statsd_exporter-0.17.0.linux-amd64.tar.gz 安装prometheus组件 tar xf prometheus-2.20.1.linux-amd64.tar.gz prometheus配置文件prometheus.yml global: scrape_interval: 15s # 应用程序或服务抓取数据的周期，默认</description>
    </item>
    <item>
      <title>Elasticsearch 滚动重启</title>
      <link>https://blog.linuxkai.com/posts/Linux/Elasticsearch-%E6%BB%9A%E5%8A%A8%E9%87%8D%E5%90%AF/</link>
      <pubDate>Sat, 09 Jan 2021 23:36:31 +0800</pubDate>
      <guid>https://blog.linuxkai.com/posts/Linux/Elasticsearch-%E6%BB%9A%E5%8A%A8%E9%87%8D%E5%90%AF/</guid>
      <description>全集群重启 禁用分片分配 PUT _cluster/settings { &amp;#34;persistent&amp;#34;: { &amp;#34;cluster.routing.allocation.enable&amp;#34;: &amp;#34;primaries&amp;#34; } } 关闭所有es节点 sudo systemctl stop elasticsearch # 或者 kill $(cat pid) 根据需要对es做出修改 重新启动节点 如果有专用的主节点，请先启动它，然后等待专用的主节点选举出主节点，再继续启动数据节点 查看集</description>
    </item>
    <item>
      <title>ZK Kafka集群添加认证</title>
      <link>https://blog.linuxkai.com/posts/Linux/ZK-Kafka%E9%9B%86%E7%BE%A4%E6%B7%BB%E5%8A%A0%E8%AE%A4%E8%AF%81/</link>
      <pubDate>Sat, 09 Jan 2021 23:30:24 +0800</pubDate>
      <guid>https://blog.linuxkai.com/posts/Linux/ZK-Kafka%E9%9B%86%E7%BE%A4%E6%B7%BB%E5%8A%A0%E8%AE%A4%E8%AF%81/</guid>
      <description>本文参考: https://www.cnblogs.com/ilovena/p/10123516.html 环境说明： 软件版本: kafka_2.12-2.6.0.tgz(本文使用的是kafka自带的zk) 系统版本: CentOS 7.3.1611 机器: 192.168.111.65 192.168.111.66 192.168.111.67 zookeeper配置 为zookeeper添加SASL支持，在配置</description>
    </item>
    <item>
      <title>Logstash插件plugins-inputs-s3</title>
      <link>https://blog.linuxkai.com/posts/Linux/Logstash%E6%8F%92%E4%BB%B6plugins-inputs-s3/</link>
      <pubDate>Sat, 09 Jan 2021 23:17:27 +0800</pubDate>
      <guid>https://blog.linuxkai.com/posts/Linux/Logstash%E6%8F%92%E4%BB%B6plugins-inputs-s3/</guid>
      <description>文档地址： https://www.elastic.co/guide/en/logstash/current/plugins-inputs-s3.html 说明 S3 input插件将读取指定的S3中符合配置的每个文件的内容，并将文件中的每一行转换为一个message，后续可以利用filter对message进行处理。在读取了S3上的文件后，S3 i</description>
    </item>
    <item>
      <title>Filebeat S3模块的使用</title>
      <link>https://blog.linuxkai.com/posts/Linux/Filebeat-S3%E6%A8%A1%E5%9D%97%E7%9A%84%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Sat, 09 Jan 2021 23:14:01 +0800</pubDate>
      <guid>https://blog.linuxkai.com/posts/Linux/Filebeat-S3%E6%A8%A1%E5%9D%97%E7%9A%84%E4%BD%BF%E7%94%A8/</guid>
      <description>说明： Filebeat 的 S3模块是用来采集AWS 的 S3存储的服务器访问日志的，通过配置 S3的事件通知，将s3的事件通知发送到 SQS,然后再用 Filebeat从 SQS 采集日志到 es 里 前提： 单独申请个 SQS,用于存储 s3的</description>
    </item>
    <item>
      <title>nginx 添加 auth 认证</title>
      <link>https://blog.linuxkai.com/posts/Linux/Nginx-%E6%B7%BB%E5%8A%A0-auth-%E8%AE%A4%E8%AF%81/</link>
      <pubDate>Wed, 30 Dec 2020 13:48:51 +0800</pubDate>
      <guid>https://blog.linuxkai.com/posts/Linux/Nginx-%E6%B7%BB%E5%8A%A0-auth-%E8%AE%A4%E8%AF%81/</guid>
      <description>安装 htpasswd # RHEL / CentOS / Oracle Linux yum -y install httpd-tools # Debian，Ubuntu apt -y install apache2-utils 修改 nginx 的 server 配置文件,添加如下两句 auth_basic &amp;#34;User Authentication&amp;#34;; # 登录时显示的字符 auth_basic_user_file conf/htpasswd.db; 示例： server { ... auth_basic &amp;#34;User Authentication&amp;#34;; auth_basic_user_file conf/htpasswd.db; location /public/ { auth_basic off; } } 生成密码 -c 代表是新建 htpasswd.db 文件，如果有就不用</description>
    </item>
    <item>
      <title>hadoop集群中一些默认的端口和配置大全</title>
      <link>https://blog.linuxkai.com/posts/%E5%A4%A7%E6%95%B0%E6%8D%AE/hadoop%E9%9B%86%E7%BE%A4%E4%B8%AD%E4%B8%80%E4%BA%9B%E9%BB%98%E8%AE%A4%E7%9A%84%E7%AB%AF%E5%8F%A3%E5%92%8C%E9%85%8D%E7%BD%AE%E5%A4%A7%E5%85%A8/</link>
      <pubDate>Mon, 28 Dec 2020 17:41:12 +0800</pubDate>
      <guid>https://blog.linuxkai.com/posts/%E5%A4%A7%E6%95%B0%E6%8D%AE/hadoop%E9%9B%86%E7%BE%A4%E4%B8%AD%E4%B8%80%E4%BA%9B%E9%BB%98%E8%AE%A4%E7%9A%84%E7%AB%AF%E5%8F%A3%E5%92%8C%E9%85%8D%E7%BD%AE%E5%A4%A7%E5%85%A8/</guid>
      <description>hadoop集群中一些默认的端口和配置大全 组件 节点 默认端口 配置 用途说明 HDFS DataNode 50010 dfs.datanode.address datanode服务端口，用于数据传输 HDFS DataNode 50075 dfs.datanode.http.address http服务的端口 HDFS DataNode 50475 dfs.datanode.https.address https服务的端口 HDFS DataNode 50020 dfs.datanode.ipc.address ipc服务的端口 HDFS NameNode 50070</description>
    </item>
    <item>
      <title>Supervisor安装配置</title>
      <link>https://blog.linuxkai.com/posts/Linux/Supervisor%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/</link>
      <pubDate>Thu, 10 Dec 2020 10:23:48 +0800</pubDate>
      <guid>https://blog.linuxkai.com/posts/Linux/Supervisor%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/</guid>
      <description>安装supervisor配置 安装 pip install supervisor 未安装pip,可下载python安装包使用python命令安装 下载地址: https://pypi.org/project/supervisor/#files python setup.py install 创建配置文件 echo_supervisord_conf &amp;gt; /etc/supervisord.conf 启动服务 supervisord -c /etc/supervisord.conf 添加新项目 新加的项目，以项目名命令，统一放到/et</description>
    </item>
    <item>
      <title>yum安装mysql5.7</title>
      <link>https://blog.linuxkai.com/posts/%E6%95%B0%E6%8D%AE%E5%BA%93/yum%E5%AE%89%E8%A3%85mysql5.7/</link>
      <pubDate>Thu, 10 Dec 2020 10:23:48 +0800</pubDate>
      <guid>https://blog.linuxkai.com/posts/%E6%95%B0%E6%8D%AE%E5%BA%93/yum%E5%AE%89%E8%A3%85mysql5.7/</guid>
      <description>yum安装mysql5.7 下载mysql官方yum源 sudo wget https://repo.mysql.com//mysql80-community-release-el7-3.noarch.rpm 安装yum源 sudo yum -y localinstall mysql80-community-release-el7-3.noarch.rpm 禁用掉8.0版本，开启5.7版本(官方默认开启的是8.0版本) #查看当前mysql版本哪个是启动 sudo yum repolist all | grep mysql #后面显示</description>
    </item>
    <item>
      <title>Ambari 离线安装(centos7.3)</title>
      <link>https://blog.linuxkai.com/posts/%E5%A4%A7%E6%95%B0%E6%8D%AE/ambari-%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85centos7.3/</link>
      <pubDate>Thu, 05 Nov 2020 10:08:53 +0800</pubDate>
      <guid>https://blog.linuxkai.com/posts/%E5%A4%A7%E6%95%B0%E6%8D%AE/ambari-%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85centos7.3/</guid>
      <description>Ambari 离线安装(centos7.3) 前期准备 配置主机hosts(每台机器都要配置/etc/hosts) 192.168.111.65 ambari-65 192.168.111.66 ambari-66 192.168.111.67 ambari-67 SSH免密登录配置 ssh-copy-id -i ~/.ssh/id_rsa.pub root@bd02 ssh-copy-id -i ~/.ssh/id_rsa.pub root@bd03 关闭及禁止防火墙 systemctl stop firewalld.service systemctl disable firewalld.service 关闭SELinux # /etc/sysconfig/selinux #修改</description>
    </item>
    <item>
      <title>MongoDB用户操作</title>
      <link>https://blog.linuxkai.com/posts/%E6%95%B0%E6%8D%AE%E5%BA%93/MongoDB%E7%94%A8%E6%88%B7%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Mon, 17 Feb 2020 16:50:16 +0800</pubDate>
      <guid>https://blog.linuxkai.com/posts/%E6%95%B0%E6%8D%AE%E5%BA%93/MongoDB%E7%94%A8%E6%88%B7%E6%93%8D%E4%BD%9C/</guid>
      <description>用户权限： mongodb是没有默认管理员账号，所以要先添加管理员账号，在开启权限认证。 切换到admin数据库，添加的账号才是管理员账号。 用户只能在用户所在数据库登录，包括管理员账号。 mongo的用户是</description>
    </item>
    <item>
      <title>ELK安装</title>
      <link>https://blog.linuxkai.com/posts/Linux/ELK%E5%AE%89%E8%A3%85/</link>
      <pubDate>Wed, 08 Jan 2020 10:21:21 +0800</pubDate>
      <guid>https://blog.linuxkai.com/posts/Linux/ELK%E5%AE%89%E8%A3%85/</guid>
      <description>配置yum源 elasticsearch [elasticsearch] name=Elasticsearch repository for 7.x packages baseurl=https://artifacts.elastic.co/packages/7.x/yum gpgcheck=1 gpgkey=https://artifacts.elastic.co/GPG-KEY-elasticsearch enabled=0 autorefresh=1 type=rpm-md kibana [kibana-7.x] name=Kibana repository for 7.x packages baseurl=https://artifacts.elastic.co/packages/7.x/yum gpgcheck=1 gpgkey=https://artifacts.elastic.co/GPG-KEY-elasticsearch enabled=1 autorefresh=1 type=rpm-md logstash [logstash-7.x] name=Elastic repository for 7.x packages baseurl=https://artifacts.elastic.co/packages/7.x/yum gpgcheck=1 gpgkey=https://artifacts.elastic.co/GPG-KEY-elasticsearch enabled=1 autorefresh=1 type=rpm-md 安装 sudo yum install elasticsearch sudo yum install kibana sudo yum install logstash 启动 systemctl start elasticsearch systemctl start kibana systemctl start logstash docker 安装 使用官方docker 仓库 注：使用官方的，比较慢，老是超</description>
    </item>
    <item>
      <title>线上MongoDB更新认证步骤</title>
      <link>https://blog.linuxkai.com/posts/%E6%95%B0%E6%8D%AE%E5%BA%93/%E7%BA%BF%E4%B8%8Amongodb%E6%9B%B4%E6%96%B0%E8%AE%A4%E8%AF%81%E6%AD%A5%E9%AA%A4/</link>
      <pubDate>Fri, 03 Jan 2020 18:32:36 +0800</pubDate>
      <guid>https://blog.linuxkai.com/posts/%E6%95%B0%E6%8D%AE%E5%BA%93/%E7%BA%BF%E4%B8%8Amongodb%E6%9B%B4%E6%96%B0%E8%AE%A4%E8%AF%81%E6%AD%A5%E9%AA%A4/</guid>
      <description>线上mongodb更新认证步骤 注意： mongo版本：3.2 原来认证方式为5，后来改成了3，这教程是从3改成5的 其实都一样，原理就是修改认证方式，删除原来用户，再建新用户 admin用户可能要有__sys</description>
    </item>
    <item>
      <title>mongoDB数据备份</title>
      <link>https://blog.linuxkai.com/posts/%E6%95%B0%E6%8D%AE%E5%BA%93/MongoDB%E6%95%B0%E6%8D%AE%E5%A4%87%E4%BB%BD/</link>
      <pubDate>Thu, 02 Jan 2020 16:52:57 +0800</pubDate>
      <guid>https://blog.linuxkai.com/posts/%E6%95%B0%E6%8D%AE%E5%BA%93/MongoDB%E6%95%B0%E6%8D%AE%E5%A4%87%E4%BB%BD/</guid>
      <description>数据导入 ./mongoimport -d DB -c COLLECTION -u USER -p PASSWORD --authenticationDatabase=DB --file=~/COLLECTION.csv --headerline --type csv 数据导出 ./mongoexport -d DB -c COLLECTION -u USER -p PASSWORD --authenticationDatabase=DB --type csv -o ~/COLLECTION.csv # 示例： ./mongoexport -d semaphore -c user -u appuser -p --authenticationDatabase=semaphore -f uid,nickName,selfSign,totalAmount,position_amount_one,position_amount_two,position_amount_three,position_amount_four --type csv -o ~/user_0102.csv # -f 可以指定列 备份 ./mongodump -d DB -c COLLECTION -u USER -p PASSWORD --authenticationDatabase=DB -o /tmp 注：备份后的目录以DB命令，里面包含两个文件us</description>
    </item>
    <item>
      <title>mongoDB配置认证机制</title>
      <link>https://blog.linuxkai.com/posts/%E6%95%B0%E6%8D%AE%E5%BA%93/MongoDB%E9%85%8D%E7%BD%AE%E8%AE%A4%E8%AF%81%E6%9C%BA%E5%88%B6/</link>
      <pubDate>Wed, 18 Dec 2019 18:53:08 +0800</pubDate>
      <guid>https://blog.linuxkai.com/posts/%E6%95%B0%E6%8D%AE%E5%BA%93/MongoDB%E9%85%8D%E7%BD%AE%E8%AE%A4%E8%AF%81%E6%9C%BA%E5%88%B6/</guid>
      <description>mongoDB创建用户管理员 注意：在不开启认证机制的情况下启动MongoDB use admin db.createUser( { user: &amp;#34;myUserAdmin&amp;#34;, pwd: &amp;#34;abc123&amp;#34;, roles: [ { role: &amp;#34;userAdminAnyDatabase&amp;#34;, db: &amp;#34;admin&amp;#34; } ] } ) 开启认证机制后，重新启动MongoDB 以用户管理员身份身份验证 use admin db.auth(&amp;#34;myUserAdmin&amp;#34;, &amp;#34;abc123&amp;#34; ) 创建其他用户 注</description>
    </item>
    <item>
      <title>归档</title>
      <link>https://blog.linuxkai.com/archives/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://blog.linuxkai.com/archives/</guid>
      <description></description>
    </item>
    <item>
      <title>搜索</title>
      <link>https://blog.linuxkai.com/search/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://blog.linuxkai.com/search/</guid>
      <description></description>
    </item>
  </channel>
</rss>
