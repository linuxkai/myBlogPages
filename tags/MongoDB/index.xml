<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>MongoDB on Linuxkai 的博客</title>
    <link>https://blog.linuxkai.com/tags/MongoDB/</link>
    <description>Recent content in MongoDB on Linuxkai 的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Mon, 17 Feb 2020 16:50:16 +0800</lastBuildDate>
    <atom:link href="https://blog.linuxkai.com/tags/MongoDB/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>MongoDB用户操作</title>
      <link>https://blog.linuxkai.com/posts/%E6%95%B0%E6%8D%AE%E5%BA%93/MongoDB%E7%94%A8%E6%88%B7%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Mon, 17 Feb 2020 16:50:16 +0800</pubDate>
      <guid>https://blog.linuxkai.com/posts/%E6%95%B0%E6%8D%AE%E5%BA%93/MongoDB%E7%94%A8%E6%88%B7%E6%93%8D%E4%BD%9C/</guid>
      <description>用户权限： mongodb是没有默认管理员账号，所以要先添加管理员账号，在开启权限认证。 切换到admin数据库，添加的账号才是管理员账号。 用户只能在用户所在数据库登录，包括管理员账号。 mongo的用户是</description>
    </item>
    <item>
      <title>线上MongoDB更新认证步骤</title>
      <link>https://blog.linuxkai.com/posts/%E6%95%B0%E6%8D%AE%E5%BA%93/%E7%BA%BF%E4%B8%8Amongodb%E6%9B%B4%E6%96%B0%E8%AE%A4%E8%AF%81%E6%AD%A5%E9%AA%A4/</link>
      <pubDate>Fri, 03 Jan 2020 18:32:36 +0800</pubDate>
      <guid>https://blog.linuxkai.com/posts/%E6%95%B0%E6%8D%AE%E5%BA%93/%E7%BA%BF%E4%B8%8Amongodb%E6%9B%B4%E6%96%B0%E8%AE%A4%E8%AF%81%E6%AD%A5%E9%AA%A4/</guid>
      <description>线上mongodb更新认证步骤 注意： mongo版本：3.2 原来认证方式为5，后来改成了3，这教程是从3改成5的 其实都一样，原理就是修改认证方式，删除原来用户，再建新用户 admin用户可能要有__sys</description>
    </item>
    <item>
      <title>mongoDB数据备份</title>
      <link>https://blog.linuxkai.com/posts/%E6%95%B0%E6%8D%AE%E5%BA%93/MongoDB%E6%95%B0%E6%8D%AE%E5%A4%87%E4%BB%BD/</link>
      <pubDate>Thu, 02 Jan 2020 16:52:57 +0800</pubDate>
      <guid>https://blog.linuxkai.com/posts/%E6%95%B0%E6%8D%AE%E5%BA%93/MongoDB%E6%95%B0%E6%8D%AE%E5%A4%87%E4%BB%BD/</guid>
      <description>数据导入 ./mongoimport -d DB -c COLLECTION -u USER -p PASSWORD --authenticationDatabase=DB --file=~/COLLECTION.csv --headerline --type csv 数据导出 ./mongoexport -d DB -c COLLECTION -u USER -p PASSWORD --authenticationDatabase=DB --type csv -o ~/COLLECTION.csv # 示例： ./mongoexport -d semaphore -c user -u appuser -p --authenticationDatabase=semaphore -f uid,nickName,selfSign,totalAmount,position_amount_one,position_amount_two,position_amount_three,position_amount_four --type csv -o ~/user_0102.csv # -f 可以指定列 备份 ./mongodump -d DB -c COLLECTION -u USER -p PASSWORD --authenticationDatabase=DB -o /tmp 注：备份后的目录以DB命令，里面包含两个文件us</description>
    </item>
    <item>
      <title>mongoDB配置认证机制</title>
      <link>https://blog.linuxkai.com/posts/%E6%95%B0%E6%8D%AE%E5%BA%93/MongoDB%E9%85%8D%E7%BD%AE%E8%AE%A4%E8%AF%81%E6%9C%BA%E5%88%B6/</link>
      <pubDate>Wed, 18 Dec 2019 18:53:08 +0800</pubDate>
      <guid>https://blog.linuxkai.com/posts/%E6%95%B0%E6%8D%AE%E5%BA%93/MongoDB%E9%85%8D%E7%BD%AE%E8%AE%A4%E8%AF%81%E6%9C%BA%E5%88%B6/</guid>
      <description>mongoDB创建用户管理员 注意：在不开启认证机制的情况下启动MongoDB use admin db.createUser( { user: &amp;#34;myUserAdmin&amp;#34;, pwd: &amp;#34;abc123&amp;#34;, roles: [ { role: &amp;#34;userAdminAnyDatabase&amp;#34;, db: &amp;#34;admin&amp;#34; } ] } ) 开启认证机制后，重新启动MongoDB 以用户管理员身份身份验证 use admin db.auth(&amp;#34;myUserAdmin&amp;#34;, &amp;#34;abc123&amp;#34; ) 创建其他用户 注</description>
    </item>
  </channel>
</rss>
