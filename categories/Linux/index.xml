<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linux on Linuxkai 的博客</title>
    <link>https://blog.linuxkai.com/categories/Linux/</link>
    <description>Recent content in Linux on Linuxkai 的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Wed, 07 Sep 2022 11:14:05 +0800</lastBuildDate>
    <atom:link href="https://blog.linuxkai.com/categories/Linux/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>df命令hang住，一直不出结果</title>
      <link>https://blog.linuxkai.com/posts/Linux/df%E5%91%BD%E4%BB%A4hang%E4%BD%8F%E4%B8%80%E7%9B%B4%E4%B8%8D%E5%87%BA%E7%BB%93%E6%9E%9C/</link>
      <pubDate>Wed, 07 Sep 2022 11:14:05 +0800</pubDate>
      <guid>https://blog.linuxkai.com/posts/Linux/df%E5%91%BD%E4%BB%A4hang%E4%BD%8F%E4%B8%80%E7%9B%B4%E4%B8%8D%E5%87%BA%E7%BB%93%E6%9E%9C/</guid>
      <description>说明 当使用 df 命令查看磁盘空间时被 hang 住，不显示结果 查找问题 通过strace命令查看系统调用 execve(&amp;#34;/usr/bin/df&amp;#34;, [&amp;#34;df&amp;#34;], 0x7ffcdb37ef80 /* 25 vars */) = 0 brk(NULL) = 0xcb9000 mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fbfdc740000 access(&amp;#34;/etc/ld.so.preload&amp;#34;, R_OK) = -1 ENOENT (没有那个文件或目录) open(&amp;#34;/etc/ld.so.cache&amp;#34;, O_RDONLY|O_CLOEXEC) = 3 fstat(3, {st_mode=S_IFREG|0644, st_size=60184, ...}) = 0 mmap(NULL, 60184, PROT_READ, MAP_PRIVATE, 3, 0) = 0x7fbfdc731000 close(3) =</description>
    </item>
    <item>
      <title>Nginx  add_header</title>
      <link>https://blog.linuxkai.com/posts/Linux/Nginx-add_header/</link>
      <pubDate>Wed, 20 Jul 2022 14:09:16 +0800</pubDate>
      <guid>https://blog.linuxkai.com/posts/Linux/Nginx-add_header/</guid>
      <description>X-Frame-Options 用来给浏览器指示允许一个页面可否在 、、 或者 中展现的标记。站点可以通过确保网站没有被嵌入到别人的站点里面，从而避免点击劫持攻击 语法 # http,server,location X-Frame-Options: DENY X-Frame-Options: SAMEORIGIN DENY: 表示该页面不允许在 frame 中展示，即便是在相同域名的页面中嵌套</description>
    </item>
    <item>
      <title>DNS Bind配置</title>
      <link>https://blog.linuxkai.com/posts/Linux/DNS-Bind%E9%85%8D%E7%BD%AE/</link>
      <pubDate>Fri, 01 Jul 2022 22:31:32 +0800</pubDate>
      <guid>https://blog.linuxkai.com/posts/Linux/DNS-Bind%E9%85%8D%E7%BD%AE/</guid>
      <description>参考文档： https://www.cnblogs.com/sandshell/p/11673658.html#autoid-7-3-0 要求 使用内部解析 内部解析如果失败，使用公网解析 dns 集群使用 环境 系统版本：Centos 7.3 192.168.112.231(主DNS) 192.168.112.9(从DNS) 192.168.112.</description>
    </item>
    <item>
      <title>基于 acme.sh 自动更新 APISIX SSL 证书</title>
      <link>https://blog.linuxkai.com/posts/Linux/%E5%9F%BA%E4%BA%8E-acme.sh-%E8%87%AA%E5%8A%A8%E6%9B%B4%E6%96%B0-APISIX-SSL-%E8%AF%81%E4%B9%A6/</link>
      <pubDate>Mon, 06 Jun 2022 18:02:37 +0800</pubDate>
      <guid>https://blog.linuxkai.com/posts/Linux/%E5%9F%BA%E4%BA%8E-acme.sh-%E8%87%AA%E5%8A%A8%E6%9B%B4%E6%96%B0-APISIX-SSL-%E8%AF%81%E4%B9%A6/</guid>
      <description>基于 acme.sh 自动更新 APISIX SSL 证书 安装 openssl , jq 略 安装acme.sh curl https://get.acme.sh | sh -s email=my@example.com my@example.com 替换成自己的邮箱，用于ZeroSSL.com 账号注册，acme.sh 默认CA 已经更新为ZeroSSL了，而ZeroSSL 需要邮箱地址注</description>
    </item>
    <item>
      <title>跨域问题</title>
      <link>https://blog.linuxkai.com/posts/Linux/%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98/</link>
      <pubDate>Mon, 07 Feb 2022 17:09:37 +0800</pubDate>
      <guid>https://blog.linuxkai.com/posts/Linux/%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98/</guid>
      <description>跨域问题 产生跨域的原因 浏览器的限制 跨域 XHR(XMLHttpRequest)请求 解决思路 JSONP nginx 代理 浏览器禁止检查跨域 浏览器禁止检查跨域(以 chrome 为例) 彻底关闭 chrome 使用命令行启动 mac open -a &amp;#34;Google Chrome&amp;#34; --args --disable-web-security --user-data-dir windows /PATH_TO/chrome.exe --args --disable-web-security --user-data-dir # 也可</description>
    </item>
    <item>
      <title>云主机磁盘扩容</title>
      <link>https://blog.linuxkai.com/posts/Linux/%E4%BA%91%E4%B8%BB%E6%9C%BA%E7%A3%81%E7%9B%98%E6%89%A9%E5%AE%B9/</link>
      <pubDate>Mon, 07 Feb 2022 10:34:29 +0800</pubDate>
      <guid>https://blog.linuxkai.com/posts/Linux/%E4%BA%91%E4%B8%BB%E6%9C%BA%E7%A3%81%E7%9B%98%E6%89%A9%E5%AE%B9/</guid>
      <description>磁盘扩容 有分区 root@aws-wlomni-jp-52-154:~# growpart /dev/xvdf 1 CHANGED: partition=1 start=2048 old: size=1048573919 end=1048575967 new: size=2147481567,end=2147483615 root@aws-wlomni-jp-52-154:~# root@aws-wlomni-jp-52-154:~# resize2fs /dev/xvdf1 resize2fs 1.42.13 (17-May-2015) Filesystem at /dev/xvdf1 is mounted on /databackup; on-line resizing required old_desc_blocks = 32, new_desc_blocks = 64 The filesystem on /dev/xvdf1 is now 268435195 (4k) blocks long. 无分区 resize2fs /dev/xvdf1</description>
    </item>
    <item>
      <title>Nginx反向代理WebSocket</title>
      <link>https://blog.linuxkai.com/posts/Linux/Nginx%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86WebSocket/</link>
      <pubDate>Mon, 10 Jan 2022 16:31:16 +0800</pubDate>
      <guid>https://blog.linuxkai.com/posts/Linux/Nginx%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86WebSocket/</guid>
      <description>nginx添加配置文件websocket.conf 下面文件的domain, upstream,ssl根据自己情况修改 map $http_upgrade $connection_upgrade { default upgrade; &amp;#39;&amp;#39; close; } upstream websocket { server localhost:8282; # appserver_ip:ws_port } server { listen 80; server_name websocket.abc.com; location / { proxy_pass http://websocket; proxy_read_timeout 300s; proxy_send_timeout 300s; proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_http_version 1.1;</description>
    </item>
    <item>
      <title>Nexus安装配置</title>
      <link>https://blog.linuxkai.com/posts/Linux/Nexus%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/</link>
      <pubDate>Fri, 26 Nov 2021 23:39:33 +0800</pubDate>
      <guid>https://blog.linuxkai.com/posts/Linux/Nexus%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/</guid>
      <description>官方文档：https://help.sonatype.com/repomanager3/download/download-archives&amp;mdash;repository-manager-3 版本说</description>
    </item>
    <item>
      <title>Kafka 常用命令</title>
      <link>https://blog.linuxkai.com/posts/Linux/Kafka-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Sat, 13 Nov 2021 23:41:24 +0800</pubDate>
      <guid>https://blog.linuxkai.com/posts/Linux/Kafka-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</guid>
      <description>TOPIC 说明： Kafka使用版本：2.12-0.10.2.2(instruction 服务使用的此版本) kafka2.2.0版本以上, 使用--bootstrap-server 127.0.0.1:9092 连接，--zookeepker 1</description>
    </item>
    <item>
      <title>Elasticsearch接入LDAP</title>
      <link>https://blog.linuxkai.com/posts/Linux/Elasticsearch%E6%8E%A5%E5%85%A5ldap/</link>
      <pubDate>Thu, 29 Jul 2021 17:21:28 +0800</pubDate>
      <guid>https://blog.linuxkai.com/posts/Linux/Elasticsearch%E6%8E%A5%E5%85%A5ldap/</guid>
      <description>说明： elasticsearch版本: 7.6.1 修改elasticsearch.yml,添加如下内容，并根据自己情况做相应修改 # 使用ldap xpack: security: authc: realms: ldap: ldap1: order: 0 url: &amp;#34;ldap://192.168.0.100:389&amp;#34; user_dn_templates: - &amp;#34;uid={0},ou=People,dc=Chk,dc=com&amp;#34; group_search: base_dn: &amp;#34;dc=Chk,dc=com&amp;#34; files: role_mapping: &amp;#34;/etc/elasticsearch/role_mapping.yml&amp;#34; unmapped_groups_as_roles: false # 使用ldaps xpack: security: authc: realms: ldap:</description>
    </item>
    <item>
      <title>Elasticsearch7.6.1 破解</title>
      <link>https://blog.linuxkai.com/posts/Linux/Elasticsearch7.6.1-%E7%A0%B4%E8%A7%A3/</link>
      <pubDate>Tue, 27 Jul 2021 23:47:39 +0800</pubDate>
      <guid>https://blog.linuxkai.com/posts/Linux/Elasticsearch7.6.1-%E7%A0%B4%E8%A7%A3/</guid>
      <description>教程参考：https://blog.espnlol.com/?p=504 破解过程 前期准备 准备反编译工具 破解中要用户反编译工具 luyten,根据自动环境下载相应的版本 https://github.com/deathmarine/Luyten/releases 最新版本的osx 版本不适用 macos 10.</description>
    </item>
    <item>
      <title>Nacos安装部署及操作</title>
      <link>https://blog.linuxkai.com/posts/Linux/Nacos-%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2%E5%8F%8A%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Thu, 01 Apr 2021 22:33:38 +0800</pubDate>
      <guid>https://blog.linuxkai.com/posts/Linux/Nacos-%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2%E5%8F%8A%E6%93%8D%E4%BD%9C/</guid>
      <description>环境说明 系统版本: centos 7.3 nacos版本: 1.3.0 机器: 192.168.111.65 192.168.111.66 192.168.111.67 安装 下载 wget https://github.com/alibaba/nacos/releases/download/1.3.0/nacos-server-1.3.0.tar.gz 解压 tar xf nacos-server-1.3.0.tar.gz cd nacos 配置配置文件 conf/cluster.conf，配置文件内容如下 192.168.111.65:8848 192.168.111.66:8848 192.168.111.67:8848 conf/application.properties spring.datasource.platform=mysql db.num=1 db.url.0=jdbc:mysql://192.168.111.65:3316/nacos_config?characterEncoding=utf8&amp;amp;connectTimeout=1000&amp;amp;socketTimeout=3000&amp;amp;autoReconnect=true db.user=root db.password=123456 spring.datasource.platform: 指定数据源为mysql db.num: 数据库数目 db.url.0: 第</description>
    </item>
    <item>
      <title>Nginx Invalid UTF-8 sequence in header value</title>
      <link>https://blog.linuxkai.com/posts/Linux/Nginx-Invalid-UTF-8-sequence-in-header-value/</link>
      <pubDate>Sat, 09 Jan 2021 23:44:01 +0800</pubDate>
      <guid>https://blog.linuxkai.com/posts/Linux/Nginx-Invalid-UTF-8-sequence-in-header-value/</guid>
      <description>failed: Invalid UTF-8 sequence in header value 解决方式 nginx.conf里添加： server_tag &amp;#34;apache&amp;#34;;</description>
    </item>
    <item>
      <title>Prometheus部署</title>
      <link>https://blog.linuxkai.com/posts/Linux/Prometheus%E9%83%A8%E7%BD%B2/</link>
      <pubDate>Sat, 09 Jan 2021 23:37:12 +0800</pubDate>
      <guid>https://blog.linuxkai.com/posts/Linux/Prometheus%E9%83%A8%E7%BD%B2/</guid>
      <description>下载各组件,(选择安装) wget https://github.com/prometheus/prometheus/releases/download/v2.23.0/prometheus-2.23.0.linux-amd64.tar.gz wget https://github.com/prometheus/alertmanager/releases/download/v0.21.0/alertmanager-0.21.0.linux-amd64.tar.gz wget https://github.com/prometheus/blackbox_exporter/releases/download/v0.17.0/blackbox_exporter-0.17.0.linux-amd64.tar.gz wget https://github.com/prometheus/consul_exporter/releases/download/v0.7.1/consul_exporter-0.7.1.linux-amd64.tar.gz wget https://github.com/prometheus/graphite_exporter/releases/download/v0.9.0/graphite_exporter-0.9.0.linux-amd64.tar.gz wget https://github.com/prometheus/haproxy_exporter/releases/download/v0.11.0/haproxy_exporter-0.11.0.linux-amd64.tar.gz wget https://github.com/prometheus/memcached_exporter/releases/download/v0.7.0/memcached_exporter-0.7.0.linux-amd64.tar.gz wget https://github.com/prometheus/mysqld_exporter/releases/download/v0.12.1/mysqld_exporter-0.12.1.linux-amd64.tar.gz wget https://github.com/prometheus/node_exporter/releases/download/v1.0.1/node_exporter-1.0.1.linux-amd64.tar.gz wget https://github.com/prometheus/pushgateway/releases/download/v1.2.0/pushgateway-1.2.0.linux-amd64.tar.gz wget https://github.com/prometheus/statsd_exporter/releases/download/v0.17.0/statsd_exporter-0.17.0.linux-amd64.tar.gz 安装prometheus组件 tar xf prometheus-2.20.1.linux-amd64.tar.gz prometheus配置文件prometheus.yml global: scrape_interval: 15s # 应用程序或服务抓取数据的周期，默认</description>
    </item>
    <item>
      <title>Elasticsearch 滚动重启</title>
      <link>https://blog.linuxkai.com/posts/Linux/Elasticsearch-%E6%BB%9A%E5%8A%A8%E9%87%8D%E5%90%AF/</link>
      <pubDate>Sat, 09 Jan 2021 23:36:31 +0800</pubDate>
      <guid>https://blog.linuxkai.com/posts/Linux/Elasticsearch-%E6%BB%9A%E5%8A%A8%E9%87%8D%E5%90%AF/</guid>
      <description>全集群重启 禁用分片分配 PUT _cluster/settings { &amp;#34;persistent&amp;#34;: { &amp;#34;cluster.routing.allocation.enable&amp;#34;: &amp;#34;primaries&amp;#34; } } 关闭所有es节点 sudo systemctl stop elasticsearch # 或者 kill $(cat pid) 根据需要对es做出修改 重新启动节点 如果有专用的主节点，请先启动它，然后等待专用的主节点选举出主节点，再继续启动数据节点 查看集</description>
    </item>
    <item>
      <title>ZK Kafka集群添加认证</title>
      <link>https://blog.linuxkai.com/posts/Linux/ZK-Kafka%E9%9B%86%E7%BE%A4%E6%B7%BB%E5%8A%A0%E8%AE%A4%E8%AF%81/</link>
      <pubDate>Sat, 09 Jan 2021 23:30:24 +0800</pubDate>
      <guid>https://blog.linuxkai.com/posts/Linux/ZK-Kafka%E9%9B%86%E7%BE%A4%E6%B7%BB%E5%8A%A0%E8%AE%A4%E8%AF%81/</guid>
      <description>本文参考: https://www.cnblogs.com/ilovena/p/10123516.html 环境说明： 软件版本: kafka_2.12-2.6.0.tgz(本文使用的是kafka自带的zk) 系统版本: CentOS 7.3.1611 机器: 192.168.111.65 192.168.111.66 192.168.111.67 zookeeper配置 为zookeeper添加SASL支持，在配置</description>
    </item>
    <item>
      <title>Logstash插件plugins-inputs-s3</title>
      <link>https://blog.linuxkai.com/posts/Linux/Logstash%E6%8F%92%E4%BB%B6plugins-inputs-s3/</link>
      <pubDate>Sat, 09 Jan 2021 23:17:27 +0800</pubDate>
      <guid>https://blog.linuxkai.com/posts/Linux/Logstash%E6%8F%92%E4%BB%B6plugins-inputs-s3/</guid>
      <description>文档地址： https://www.elastic.co/guide/en/logstash/current/plugins-inputs-s3.html 说明 S3 input插件将读取指定的S3中符合配置的每个文件的内容，并将文件中的每一行转换为一个message，后续可以利用filter对message进行处理。在读取了S3上的文件后，S3 i</description>
    </item>
    <item>
      <title>Filebeat S3模块的使用</title>
      <link>https://blog.linuxkai.com/posts/Linux/Filebeat-S3%E6%A8%A1%E5%9D%97%E7%9A%84%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Sat, 09 Jan 2021 23:14:01 +0800</pubDate>
      <guid>https://blog.linuxkai.com/posts/Linux/Filebeat-S3%E6%A8%A1%E5%9D%97%E7%9A%84%E4%BD%BF%E7%94%A8/</guid>
      <description>说明： Filebeat 的 S3模块是用来采集AWS 的 S3存储的服务器访问日志的，通过配置 S3的事件通知，将s3的事件通知发送到 SQS,然后再用 Filebeat从 SQS 采集日志到 es 里 前提： 单独申请个 SQS,用于存储 s3的</description>
    </item>
    <item>
      <title>nginx 添加 auth 认证</title>
      <link>https://blog.linuxkai.com/posts/Linux/Nginx-%E6%B7%BB%E5%8A%A0-auth-%E8%AE%A4%E8%AF%81/</link>
      <pubDate>Wed, 30 Dec 2020 13:48:51 +0800</pubDate>
      <guid>https://blog.linuxkai.com/posts/Linux/Nginx-%E6%B7%BB%E5%8A%A0-auth-%E8%AE%A4%E8%AF%81/</guid>
      <description>安装 htpasswd # RHEL / CentOS / Oracle Linux yum -y install httpd-tools # Debian，Ubuntu apt -y install apache2-utils 修改 nginx 的 server 配置文件,添加如下两句 auth_basic &amp;#34;User Authentication&amp;#34;; # 登录时显示的字符 auth_basic_user_file conf/htpasswd.db; 示例： server { ... auth_basic &amp;#34;User Authentication&amp;#34;; auth_basic_user_file conf/htpasswd.db; location /public/ { auth_basic off; } } 生成密码 -c 代表是新建 htpasswd.db 文件，如果有就不用</description>
    </item>
    <item>
      <title>Supervisor安装配置</title>
      <link>https://blog.linuxkai.com/posts/Linux/Supervisor%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/</link>
      <pubDate>Thu, 10 Dec 2020 10:23:48 +0800</pubDate>
      <guid>https://blog.linuxkai.com/posts/Linux/Supervisor%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/</guid>
      <description>安装supervisor配置 安装 pip install supervisor 未安装pip,可下载python安装包使用python命令安装 下载地址: https://pypi.org/project/supervisor/#files python setup.py install 创建配置文件 echo_supervisord_conf &amp;gt; /etc/supervisord.conf 启动服务 supervisord -c /etc/supervisord.conf 添加新项目 新加的项目，以项目名命令，统一放到/et</description>
    </item>
    <item>
      <title>yum安装mysql5.7</title>
      <link>https://blog.linuxkai.com/posts/%E6%95%B0%E6%8D%AE%E5%BA%93/yum%E5%AE%89%E8%A3%85mysql5.7/</link>
      <pubDate>Thu, 10 Dec 2020 10:23:48 +0800</pubDate>
      <guid>https://blog.linuxkai.com/posts/%E6%95%B0%E6%8D%AE%E5%BA%93/yum%E5%AE%89%E8%A3%85mysql5.7/</guid>
      <description>yum安装mysql5.7 下载mysql官方yum源 sudo wget https://repo.mysql.com//mysql80-community-release-el7-3.noarch.rpm 安装yum源 sudo yum -y localinstall mysql80-community-release-el7-3.noarch.rpm 禁用掉8.0版本，开启5.7版本(官方默认开启的是8.0版本) #查看当前mysql版本哪个是启动 sudo yum repolist all | grep mysql #后面显示</description>
    </item>
    <item>
      <title>ELK安装</title>
      <link>https://blog.linuxkai.com/posts/Linux/ELK%E5%AE%89%E8%A3%85/</link>
      <pubDate>Wed, 08 Jan 2020 10:21:21 +0800</pubDate>
      <guid>https://blog.linuxkai.com/posts/Linux/ELK%E5%AE%89%E8%A3%85/</guid>
      <description>配置yum源 elasticsearch [elasticsearch] name=Elasticsearch repository for 7.x packages baseurl=https://artifacts.elastic.co/packages/7.x/yum gpgcheck=1 gpgkey=https://artifacts.elastic.co/GPG-KEY-elasticsearch enabled=0 autorefresh=1 type=rpm-md kibana [kibana-7.x] name=Kibana repository for 7.x packages baseurl=https://artifacts.elastic.co/packages/7.x/yum gpgcheck=1 gpgkey=https://artifacts.elastic.co/GPG-KEY-elasticsearch enabled=1 autorefresh=1 type=rpm-md logstash [logstash-7.x] name=Elastic repository for 7.x packages baseurl=https://artifacts.elastic.co/packages/7.x/yum gpgcheck=1 gpgkey=https://artifacts.elastic.co/GPG-KEY-elasticsearch enabled=1 autorefresh=1 type=rpm-md 安装 sudo yum install elasticsearch sudo yum install kibana sudo yum install logstash 启动 systemctl start elasticsearch systemctl start kibana systemctl start logstash docker 安装 使用官方docker 仓库 注：使用官方的，比较慢，老是超</description>
    </item>
  </channel>
</rss>
